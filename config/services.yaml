# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
#        bind:
#            $var: 'value'

    _instanceof:
        App\CQRS\QueryHandlerInterface:
            tags: ['cqrs.query_handler']
        App\CQRS\CommandHandlerInterface:
            tags: ['cqrs.command_handler']
        App\Core\Service\Task\TaskStack\Generator\TaskStackGeneratorInterface:
            tags: ['core.task_stack_generator']
        App\Sms\Service\Provider\SmsProviderInterface:
            tags: ['sms.provider']

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude: '../src/*/Entity/'

    App\Api\EventListener\ExceptionListener:
#        tags:
#            - {name: kernel.event_listener, event: kernel.exception}


    App\Auth\Service\Token\RedisTokenService:
        $accessTokenLifeTime: '%env(ACCESS_TOKEN_LIFETIME)%'
        $phoneBanTime: '%env(BAN_PHONE_TIME)%'
        $confirmationTokenLifeTime: '%env(CONFIRMATION_TOKEN_LIFETIME)%'


    App\CQRS\Bus\CommandBus:
        $commandHandlers: !tagged_iterator 'cqrs.command_handler'

    App\CQRS\Bus\QueryBus:
        $queryHandlers: !tagged_iterator 'cqrs.query_handler'


    App\DataFixtures\Purger\PurgerFactory:
        tags:
            - { name: 'doctrine.fixtures.purger_factory', alias: 'my_purger' }


    App\Core\Service\Task\TaskStack\Generator\TaskStackGeneratorFactory:
        $generators: !tagged_iterator 'core.task_stack_generator'


    App\Sms\Service\SmsService:
        $provider: '%env(SMS_PROVIDER)%'


    App\Sms\Service\Provider\SmsProviderFactory:
        $providers: !tagged_iterator 'sms.provider'

    App\Sms\Service\Provider\TelegramSmsProvider:
        $botToken: '%env(TELEGRAM_BOT_TOKEN)%'
        $host: '%env(TELEGRAM_BOT_URL)%'
        $chatId: '%env(TELEGRAM_CHAT_ID)%'


    Predis\Client:
        arguments:
            - '%env(REDIS_HOST)%'


    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

when@test:
    services:
        _defaults:
            public: true
